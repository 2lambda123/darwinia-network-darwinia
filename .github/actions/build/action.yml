name: "Build darwinia node"

description: "Darwinia artifacts building action."

inputs:
  features:
    description: "build features"
    required: false
    default: ""
  suffix:
    description: "output file suffix"
    required: false
    default: ""
  enable_cache:
    description: "enable cache"
    required: false
    default: "false"
  cache_shrink_script:
    description: "shrink cache script file path"
    required: false
    default: ".github/shrink-cache.sh"
  enable_tar_bz2:
    description: "enable package tar.bz2"
    required: false
    default: "false"
  skip-build:
    description: "use this for testing purposes only"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Build Docker image
      if: ${{ inputs.skip-build != 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: .
        file: .maintain/docker/ubuntu:20.04.Dockerfile
        tags: darwinia-network/build-tool:latest
    - name: Cache cargo
      if: ${{ inputs.enable_cache == 'true' && inputs.skip-build != 'true' }}
      uses: actions/cache@v3
      with:
        path: |
          ./target
        key: darwinia-${{ runner.os }}-${{ hashFiles('rust-toolchain.toml') }}-${{ hashFiles('Cargo.lock') }}
        restore-keys: |
          darwinia-${{ runner.os }}-${{ hashFiles('rust-toolchain.toml') }}-
          darwinia-${{ runner.os }}-
    - name: Build node
      shell: bash
      run: |
        FEATURES=${{ inputs.features }}
        SUFFIX=${{ inputs.suffix }}
        ENABLE_TAR_BZ2=${{ inputs.enable_tar_bz2 }}
        SKIP_BUILD=${{ inputs.skip-build }}

        if [ "$SKIP_BUILD" != "true" ]; then
          docker run -i --rm \
            --name=build-darwinia \
            -v=$(pwd):/build \
            darwinia-network/build-tool:latest \
              cargo build --release --locked \
                -p darwinia \
                --no-default-features \
                --features=$FEATURES
        else
          mkdir -p target/release
          echo SKIP_BUILD > target/release/darwinia
        fi

        BUILD_DIR=build
        mkdir -p $BUILD_DIR

        if [ "$ENABLE_TAR_BZ2" == "true" ]; then
          tar cjSf ${BUILD_DIR}/darwinia${SUFFIX:+-$SUFFIX}-x86_64-linux-gnu.tar.bz2 target/release/darwinia
        fi

        tar cf ${BUILD_DIR}/darwinia${SUFFIX:+-$SUFFIX}-x86_64-linux-gnu.tar.zst target/release/darwinia -I zstd
    - name: Shrink cache
      if: ${{ inputs.enable_cache == 'true' && inputs.skip-build != 'true' }}
      shell: bash
      run: |
        docker run -i --rm \
          --name=build-darwinia \
          -v=$(pwd):/build \
          darwinia-network/build-tool:latest \
          ${{ inputs.cache_shrink_script }} release
