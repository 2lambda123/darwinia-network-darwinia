name: Release

on:
  push:
    tags:
      - "v*"
      - "pango*"

env:
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  CARGO_TERM_COLOR: always

  DOCKER_REGISTRY: ghcr.io

  GOMPLATE_VERSION: v3.11.6
  GOMPLATE: gomplate_linux-amd64
  GOMPLATE_URL: https://github.com/hairyhenderson/gomplate/releases/download

  RUST_BACKTRACE: full
  RUST_TOOLCHAIN: nightly-2023-05-22

  SKIP_BUILD: true

jobs:
  build-nodes:
    name: Build nodes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - network: mainnet
            features: darwinia-native,crab-native
            bz2: true
          - network: mainnet
            features: darwinia-native,crab-native,evm-tracing
            type: tracing
          - network: testnet
            features: pangoro-native,pangolin-native
            bz2: true
          - network: testnet
            features: pangoro-native,pangolin-native,evm-tracing
            type: tracing
    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: false
      - name: Set swap space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 8
      - name: Fetch latest code
        uses: actions/checkout@v4
      - name: Build mainnet node
        if: ${{ startsWith(github.ref, 'refs/tags/v') && (matrix.node.network == 'mainnet') }}
        uses: ./.github/actions/build
        with:
          features: ${{ matrix.node.features }}
          suffix: ${{ matrix.node.type }}
          enable_tar_bz2: ${{ matrix.node.bz2 }}
          skip-build: ${{ env.SKIP_BUILD }}}
      - name: Build testnet node
        if: ${{ startsWith(github.ref, 'refs/tags/pango') && (matrix.node.network == 'testnet') }}
        uses: ./.github/actions/build
        with:
          features: ${{ matrix.node.features }}
          suffix: ${{ matrix.node.type }}
          enable_tar_bz2: ${{ matrix.node.bz2 }}
          skip-build: ${{ env.SKIP_BUILD }}
      - name: Upload node
        uses: actions/upload-artifact@v4
        with:
          name: darwinia${{ (matrix.node.type != '' && format('-%s', matrix.node.type)) || '' }}
          path: build
          retention-days: 1
      - name: Fail fast
        uses: vishnudxb/cancel-workflow@v1.2
        if: failure()
        with:
          repo: darwinia-network/darwinia
          workflow_id: ${{ github.run_id }}
          access_token: ${{ github.token }}

  build-runtimes:
    name: Build runtimes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime:
          - darwinia
          - crab
          - pangoro
          - pangolin
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v4
      - name: Setup gomplate
        run: |
          curl -LO ${{ env.GOMPLATE_URL }}/${{ env.GOMPLATE_VERSION }}/${{ env.GOMPLATE }}
          chmod u+x ${{ env.GOMPLATE }}
          sudo mv ${{ env.GOMPLATE }} /usr/bin/gomplate
      - name: Build ${{ matrix.runtime }} runtime
        id: srtool_build
        if: ${{ env.SKIP_BUILD != 'false' } }}
        uses: chevdor/srtool-actions@v0.9.1
        with:
          image: paritytech/srtool
          tag: "1.70.0"
          chain: ${{ matrix.runtime }}
      - name: Prepare artifact
        run: |
          CHAIN=${{ matrix.runtime }}
          SKIP_BUILD=${{ inputs.skip-build }}

          mkdir -p build

          if [ "$SKIP_BUILD" == "false" ]; then
            echo '${{ steps.srtool_build.outputs.json }}' | jq > build/${ CHAIN }-srtool.json
            mv ${ CHAIN }_runtime.compact.compressed.wasm build/

            cat .github/template-runtime.md \
              | gomplate -d srtool=build/${ CHAIN }-srtool.json \
              > build/release-template-${ CHAIN }.md
          else
            touch build/${ CHAIN }-srtool.json
            touch build/${ CHAIN }_runtime.compact.compressed.wasm
          fi
      - name: Upload ${{ matrix.runtime }} runtime
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.runtime }}-runtime
          path: build
          retention-days: 1
      - name: Fail fast
        uses: vishnudxb/cancel-workflow@v1.2
        if: failure()
        with:
          repo: darwinia-network/darwinia
          workflow_id: ${{ github.run_id }}
          access_token: ${{ github.token }}

  publish-docker-image:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: [build-nodes]
    steps:
      - name: Download node
        uses: actions/download-artifact@v4
      - name: Extract node
        run: |
          mkdir -p dist
          tar -xvf darwinia/darwinia-x86_64-linux-gnu.tar.bz2 -C dist/
      - name: Tag
        uses: olegtarasov/get-tag@v2.1
      - name: Sha
        uses: benjlevesque/short-sha@v2.2
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.DOCKER_REGISTRY }}
      - name: Publish
        if: ${{ env.SKIP_BUILD != 'false' } }}
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: .maintain/docker/Dockerfile
          tags: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}:sha-${{ env.SHA }}
      - name: Publish with tag
        if: ${{ env.SKIP_BUILD != 'false' } }} && (startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/pango'))
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: .maintain/docker/Dockerfile
          tags: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}:${{ env.GIT_TAG_NAME }}

  publish-github-release:
    name: Publish GitHub release
    runs-on: ubuntu-latest
    needs: [build-nodes, build-runtimes, publish-docker-image]
    steps:
      - name: Download nodes and runtimes
        uses: actions/download-artifact@v4
      - name: Prepare nodes and runtimes
        run: |
          mkdir -p deploy
          mv *runtime/*.json deploy/
          mv *runtime/*.wasm deploy/
          mv darwinia/*.tar.* deploy/
          mv darwinia-tracing/*.tar.* deploy/
      - name: Setup gomplate
        run: |
          curl -LO ${{ env.GOMPLATE_URL }}/${{ env.GOMPLATE_VERSION }}/${{ env.GOMPLATE }}
          chmod u+x ${{ env.GOMPLATE }}
          sudo mv ${{ env.GOMPLATE }} /usr/bin/gomplate
      - name: Tag
        uses: olegtarasov/get-tag@v2.1
      - name: Sha
        uses: benjlevesque/short-sha@v2.2
      - name: Prepare note
        run: |
          export RELEASE_SCHEMA='{"tag": "'$GIT_TAG_NAME'", "sha": "'$SHA'"}'
          cat .github/template-release.md \
            | gomplate -d schema='env:/RELEASE_SCHEMA?type=application/json' \
            > template-release.tmp.md
      - name: Fill mainnet note
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cat darwinia-runtime/release-template-darwinia.md >> template-release.md
          cat crab-runtime/release-template-crab.md >> template-release.md
          cat template-release.tmp.md >> template-release.md
      - name: Fill testnet note
        if: startsWith(github.ref, 'refs/tags/pango')
        run: |
          cat pangolin-runtime/release-template-pangolin.md >> template-release.md
          cat pangoro-runtime/release-template-pangoro.md >> template-release.md
          cat template-release.tmp.md >> template-release.md
      - name: Hash file
        run: cd deploy && sha256sum * | tee sha256sums.txt
      # - name: Verify
      #   run: |
      #     set -xe
      #     cat template-release.md
      #     ls -la deploy/
      #     cat build/*.md
      - name: Publish
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          body_path: "template-release.md"
          files: |
            deploy/*
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ startsWith(github.ref, 'refs/tags/pango') }}

  deploy-tracing-node:
    name: Deploy tracing node
    runs-on: ubuntu-latest
    needs: [publish-github-release]
    steps:
      - name: Tag
        uses: olegtarasov/get-tag@v2.1
      - name: Deploy mainnet tracing nodes
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          GITHUB_TOKEN=${{ secrets.GH_TKN_DARWINIA }} gh workflow run \
            trigger-tracing-node.yml \
            --ref=main \
            --repo=darwinia-network/devops \
            --raw-field=type=mainnets \
            --raw-field="version=$GIT_TAG_NAME"
      - name: Deploy testnet tracing nodes
        if: startsWith(github.ref, 'refs/tags/pango')
        run: |
          GITHUB_TOKEN=${{ secrets.GH_TKN_DARWINIA }} gh workflow run \
            trigger-tracing-node.yml \
            --ref=main \
            --repo=darwinia-network/devops \
            --raw-field=type=testnets \
            --raw-field="version=$GIT_TAG_NAME"
