name: Release
on:
  push:
    tags:
      - 'v*'

jobs:

  build-package:
    name: Build package
    runs-on: ubuntu-latest
    container:
      image: ubuntu:16.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt update -y
          apt install --no-install-recommends -y \
            git curl ca-certificates \
            make gcc g++ clang-4.0

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2021-04-22
          target: wasm32-unknown-unknown
          default: true

      - name: Cache target
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-target

      - name: Build darwinia
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu

      - name: Collect shared
        run: |
          mkdir -p shared/crab-runtime
          mkdir -p shared/darwinia-runtime
          mv target/x86_64-unknown-linux-gnu/release/darwinia shared/
          mv target/x86_64-unknown-linux-gnu/release/wbuild/crab-runtime/*.wasm shared/crab-runtime
          mv target/x86_64-unknown-linux-gnu/release/wbuild/darwinia-runtime/*.wasm shared/darwinia-runtime

      - name: Upload shared
        uses: actions/upload-artifact@v2
        with:
          name: darwinia-artifact
          path: shared

      - name: Optimize cache
        # todo: set executable permissions for optimize-cache.sh
        run: sh -f .maintain/optimize-cache.sh

  build-subwasm:
    name: Generate subwasm info
    runs-on: ubuntu-latest
    container:
      # Currently, Same with srtool version v0.9.18
      # https://github.com/paritytech/srtool/blob/v0.9.18/Dockerfile#L1
      image: ubuntu:20.04
    needs: [build-package]
    strategy:
      matrix:
        runtime: [crab-runtime, darwinia-runtime]
    steps:
      - name: Install dependencies
        run: |
          apt update -y
          apt install --no-install-recommends -y \
            git curl ca-certificates

      - uses: actions/download-artifact@v2
        with:
          name: darwinia-artifact
          path: shared

      - name: Install subwasm
        env:
          # Currently, Same with srtool version v0.9.18
          # https://github.com/paritytech/srtool/blob/v0.9.18/Dockerfile#L19
          SUBWASM_VERSION: 0.15.0
        run: |
          curl -L https://github.com/chevdor/subwasm/releases/download/v${SUBWASM_VERSION}/subwasm_linux_amd64_v${SUBWASM_VERSION}.deb \
            --output subwasm.deb && \
            dpkg -i subwasm.deb && \
            subwasm --version

      - name: Test subwasm for ${{ matrix.runtime }}
        run: |
          WASM=shared/${{ matrix.runtime }}/*.compact.wasm
          Z_WASM=shared/${{ matrix.runtime }}/*.compact.compressed.wasm

          INFO_WASM=$(subwasm -j info $WASM)
          INFO_Z_WASM=$(subwasm -j info $Z_WASM)

          echo "$INFO_WASM" > shared/${{ matrix.runtime }}/${{ matrix.runtime }}.compact.json
          echo "$INFO_Z_WASM" > shared/${{ matrix.runtime }}/${{ matrix.runtime }}.compact.compressed.json

      - name: Upload shared
        uses: actions/upload-artifact@v2
        with:
          name: darwinia-artifact
          path: shared

  build-image:
    name: Build image
    runs-on: ubuntu-latest
    needs: [build-package]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: darwinia-artifact
          path: shared

#      - name: Docker login
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.QUAY_IO_BOT_USERNAME }}
#          password: ${{ secrets.QUAY_IO_BOT_PASSWORD }}
#          registry: quay.io

      - uses: olegtarasov/get-tag@v2.1
        id: tag-name
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7

      - name: Build and publish docker image
        env:
          SHA: ${{ env.SHA }}
        run: |
          chmod +x shared/darwinia

          IMAGE_NAME=darwinia
          IMAGE_PREFIX=quay.io/darwinia-network
          IMAGE_PUSH_NAME_TAG=${IMAGE_PREFIX}/${IMAGE_NAME}:${GIT_TAG_NAME}
          IMAGE_PUSH_NAME_SHA=${IMAGE_PREFIX}/${IMAGE_NAME}:sha-${SHA}

          docker build \
            -t ${IMAGE_NAME} \
            -f .maintain/docker/Dockerfile \
            .

          docker tag ${IMAGE_NAME} ${IMAGE_PUSH_NAME_TAG}
          docker tag ${IMAGE_NAME} ${IMAGE_PUSH_NAME_SHA}

#          docker push ${IMAGE_PUSH_NAME_TAG}
#          docker push ${IMAGE_PUSH_NAME_SHA}

  complete-build:
    name: Complete build
    runs-on: ubuntu-latest
    needs: [build-subwasm, build-image]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: darwinia-artifact
          path: shared

      - name: Prepare deploy folder
        run: |
          chmod +x shared/darwinia

          mkdir deploy
          cd shared
          tar cf darwinia.tar.zst darwinia -I pzstd
          mv darwinia.tar.zst ../deploy/

          mv crab-runtime/*.compact.wasm ../deploy/
          mv crab-runtime/*.compact.json ../deploy/
          mv darwinia-runtime/*.compact.wasm ../deploy/
          mv darwinia-runtime/*.compact.json ../deploy/

## not open for now. https://github.com/darwinia-network/darwinia/pull/779#issuecomment-964911852
#          mv crab-runtime/*.compact.compressed.wasm ../deploy/
#          mv crab-runtime/*.compact.compressed.json ../deploy/
#          mv darwinia-runtime/*.compact.compressed.wasm ../deploy/
#          mv darwinia-runtime/*.compact.compressed.json ../deploy/

      - name: Hash file
        run: |
          cd deploy
          md5sum * > ../md5sums.txt
          mv ../md5sums.txt ./

      - uses: olegtarasov/get-tag@v2.1
        id: tag-name
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7

      - name: Generate template data
        run: |
          PROPOSAL_CRAB_COMPACT=$(cat deploy/crab-runtime.compact.json | jq -r .proposal_hash)
          PROPOSAL_DARWINIA_COMPACT=$(cat deploy/darwinia-runtime.compact.json | jq -r .proposal_hash)

          # # not open for now. https://github.com/darwinia-network/darwinia/pull/779#issuecomment-964911852
          # PROPOSAL_CRAB_COMPRESSED=$(cat deploy/crab-runtime.compact.compressed.json | jq -r .proposal_hash)
          # PROPOSAL_DARWINIA_COMPRESSED=$(cat deploy/darwinia-runtime.compressed.compact.json | jq -r .proposal_hash)

          IMAGE_NAME=darwinia
          IMAGE_PREFIX=quay.io/darwinia-network
          IMAGE_PUSH_NAME_TAG=${IMAGE_PREFIX}/${IMAGE_NAME}:${GIT_TAG_NAME}
          IMAGE_PUSH_NAME_SHA=${IMAGE_PREFIX}/${IMAGE_NAME}:sha-${SHA}

          JSON=$( jq -n \
            --arg crab_proposal_compact "$PROPOSAL_CRAB_COMPACT" \
            --arg darwinia_proposal_compact "$PROPOSAL_DARWINIA_COMPACT" \
            --arg image_tag "$IMAGE_PUSH_NAME_TAG" \
            --arg image_sha "$IMAGE_PUSH_NAME_SHA" \
            '{
              crab_proposal_compact: $crab_proposal_compact,
              darwinia_proposal_compact: $darwinia_proposal_compact,
              image_tag: $image_tag,
              image_sha: $image_sha
            }' )
          echo "$JSON" > shared/template_data.json

      - name: Render release page
        uses: jayamanikharyono/jinja-action@v0.1
        with:
          datafile: shared/template_data.json
          path: .maintain/release-template.md

      - name: Publish github release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "deploy/*"
          bodyFile: ".maintain/release-template.md"
          token: ${{ secrets.GITHUB_TOKEN }}
