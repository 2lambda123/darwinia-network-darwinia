name: Checks
on:
  push:
    branches:
      - main
    paths:
      - "**.rs"
      - "**.toml"
      - "**lock"
      - "**.json"
      - "**.yml"
  pull_request:
    types: [opened, synchronize, ready_for_review]
    branches:
      - main
    paths:
      - "**.rs"
      - "**.toml"
      - "**lock"
      - "**.json"
      - "**.yml"

env:
  GITHUB_CACHE_VERSION: 3

  RUST_TOOLCHAIN: nightly
  RUST_BACKTRACE: full
  RUSTC_WRAPPER: sccache

  SCCACHE_LINK: https://github.com/mozilla/sccache/releases/download
  SCCACHE_VERSION: v0.2.15
  SCCACHE_DIR: /home/runner/.cache/sccache

  SUBALFRED_LINK: https://github.com/hack-ink/subalfred/releases/download
  SUBALFRED_VERSION: v0.9.0-rc1

jobs:
  basic-checks:
    name: Task ${{ matrix.action }} darwinia
    if: github.event_name == 'push' || !github.event.pull_request.draft
    runs-on: ubuntu-latest
    strategy:
      matrix:
        action: [build, test]

    steps:
      - name: Install Rust ${{ env.RUST_TOOLCHAIN }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
      - name: Install Sccache
        run: |
          export SCCACHE_FILE=sccache-${{ env.SCCACHE_VERSION }}-x86_64-unknown-linux-musl
          curl -L ${{ env.SCCACHE_LINK }}/${{ env.SCCACHE_VERSION }}/$SCCACHE_FILE.tar.gz | tar xz
          sudo mv $SCCACHE_FILE/sccache /usr/bin
          sudo chmod u+x /usr/bin/sccache
      - name: Fetch latest code
        uses: actions/checkout@v3
      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ matrix.action }}-${{ env.GITHUB_CACHE_VERSION }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-${{ matrix.action }}-${{ env.GITHUB_CACHE_VERSION }}-
      - name: Cache sccache
        uses: actions/cache@v2
        with:
          path: ${{ env.SCCACHE_DIR}}
          key: sccache-${{ matrix.action }}-${{ env.GITHUB_CACHE_VERSION }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: sccache-${{ matrix.action }}-${{ env.GITHUB_CACHE_VERSION }}-
      - name: Action ${{ matrix.action }}
        uses: actions-rs/cargo@v1
        with:
          command: ${{ matrix.action }}
          args: --release --locked
      - name: Compress
        if: matrix.action != 'test'
        run: |
          mv target/release/darwinia .
          tar cf darwinia.tar.zst darwinia -I pzstd
      - name: Upload
        if: matrix.action != 'test'
        uses: actions/upload-artifact@v2
        with:
          name: darwinia
          path: darwinia.tar.zst
      - name: Purge large cache
        run: .github/purge-large-cache.sh

  code-checks:
    name: Task check code
    if: github.event_name == 'push' || !github.event.pull_request.draft
    runs-on: ubuntu-latest
    steps:
      - name: Install Rust ${{ env.RUST_TOOLCHAIN }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          default: true
      - name: Install Subalfred
        run: |
          curl -L ${{ env.SUBALFRED_LINK }}/${{ env.SUBALFRED_VERSION }}/subalfred.tar.zst | tar x -I pzstd
          sudo mv subalfred /usr/bin
          sudo chmod u+x /usr/bin/subalfred
      - name: Fetch latest code
        uses: actions/checkout@v3
        run: |
          unset RUSTC_WRAPPER
          subalfred check std-feature

  runtime-checks:
    name: Task check runtime
    if: github.event_name == 'push' || !github.event.pull_request.draft
    needs: [basic-checks]
    runs-on: ubuntu-latest
    steps:
      - name: Install Subalfred
        run: |
          curl -L ${{ env.SUBALFRED_LINK }}/${{ env.SUBALFRED_VERSION }}/subalfred.tar.zst | tar x -I pzstd
          sudo mv subalfred /usr/bin
          sudo chmod u+x /usr/bin/subalfred
      - name: Download darwinia
        uses: actions/download-artifact@v2
        with:
          name: darwinia
      - name: Install darwinia
        run: |
          tar xf darwinia.tar.zst -I pzstd
          sudo mv darwinia /usr/bin
      - id: check-crab-runtime-version
        name: Check Crab runtime version
        run: |
          OUTPUT=$(subalfred check runtime --executable darwinia --chain crab --live https://crab-rpc.darwinia.network --property version)
          OUTPUT="${OUTPUT//'%'/'%25'}​"
          OUTPUT="${OUTPUT//$'\n'/'%0A'}"
          OUTPUT="${OUTPUT//$'\r'/'%0D'}"
          echo "::set-output name=check-crab-runtime-version::$OUTPUT"
      - id: check-crab-runtime-storage
        name: Check Crab storage prefix
        run: |
          OUTPUT=$(subalfred check runtime --executable darwinia --chain crab --live https://crab-rpc.darwinia.network --property storage)
          OUTPUT="${OUTPUT//'%'/'%25'}​"
          OUTPUT="${OUTPUT//$'\n'/'%0A'}"
          OUTPUT="${OUTPUT//$'\r'/'%0D'}"
          echo "::set-output name=check-crab-runtime-storage::$OUTPUT"
      - id: check-darwinia-runtime-version
        name: Check Darwinia runtime version
        run: |
          OUTPUT=$(subalfred check runtime --executable darwinia --chain darwinia --live https://rpc.darwinia.network --property version)
          OUTPUT="${OUTPUT//'%'/'%25'}​"
          OUTPUT="${OUTPUT//$'\n'/'%0A'}"
          OUTPUT="${OUTPUT//$'\r'/'%0D'}"
          echo "::set-output name=check-darwinia-runtime-version::$OUTPUT"
      - id: check-darwinia-runtime-storage
        name: Check Darwinia storage prefix
        run: |
          OUTPUT=$(subalfred check runtime --executable darwinia --chain darwinia --live https://rpc.darwinia.network --property storage)
          OUTPUT="${OUTPUT//'%'/'%25'}​"
          OUTPUT="${OUTPUT//$'\n'/'%0A'}"
          OUTPUT="${OUTPUT//$'\r'/'%0D'}"
          echo "::set-output name=check-darwinia-runtime-storage::$OUTPUT"
      - if: github.ref != 'refs/heads/master'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          append: true
          message: |
            <details>
            <summary>Commit ${{ github.event.pull_request.head.sha }}</summary>

            **Crab**
            > Check Runtime Version
            ```diff
            ${{ steps.check-crab-runtime-version.outputs.check-crab-runtime-version }}
            ```
            > Check Storage Prefix
            ```diff
            ${{ steps.check-crab-runtime-storage.outputs.check-crab-runtime-storage }}
            ```

            **Darwinia**
            > Check Runtime Version
            ```diff
            ${{ steps.check-darwinia-runtime-version.outputs.check-darwinia-runtime-version }}
            ```
            > Check Storage Prefix
            ```diff
            ${{ steps.check-darwinia-runtime-storage.outputs.check-darwinia-runtime-storage }}
            ```
            </details>

  housekeeping-checks:
    name: Task check housekeeping
    if: always()
    needs: [code-checks, runtime-checks]
    steps:
      - name: Clean artifacts
        uses: geekyeggo/delete-artifact@v1
        with:
          name: |
            darwinia
            subalfred
    runs-on: ubuntu-latest
