name: NRelease

on:
  push:
    tags:
      - "v*"
      - "pango*"
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  DOCKER_REGISTRY: ghcr.io
  RUST_TOOLCHAIN: nightly-2022-11-15

jobs:
  build-package:
    name: Build package [linux]
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    strategy:
      matrix:
        chain:
          - mode: mainnets
            features: darwinia-native,crab-native
            suffix: general
          - mode: mainnets
            features: darwinia-native,crab-native,evm-tracing
            suffix: tracing
#          - mode: testnets
#            features: pangoro-native,pangolin-native
#            suffix: general
#          - mode: testnets
#            features: pangoro-native,pangolin-native,evm-tracing
#            suffix: tracing
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v3

      - uses: actions/checkout@v2
        with:
          repository: fewensa/actions
          path: .github/actions
#          persist-credentials: false
#          ssh-key: "${{ secrets.ITERING_ACTIONS_DEPLOY_KEY }}"

      - uses: ./.github/actions/fast-substrate
        name: Build testnets
        id: build-testnets
        # if: ${{ startsWith(github.ref, 'refs/tags/pango') && (matrix.chain.mode == 'testnets') }}
        if: ${{ matrix.chain.mode == 'testnets' }} # only test
        with:
          package: darwinia
          rust_toolchain: ${{ env.RUST_TOOLCHAIN }}
          features: ${{ matrix.chain.features }}
          suffix: ${{ matrix.chain.suffix }}

      - uses: ./.github/actions/fast-substrate
        name: Build mainnets
        id: build-mainnets
        # if: ${{ startsWith(github.ref, 'refs/tags/pango') && (matrix.chain.mode == 'mainnets') }}
        if: ${{ matrix.chain.mode == 'mainnets' }} # only test
        with:
          package: darwinia
          features: ${{ matrix.chain.features }}
          suffix: ${{ matrix.chain.suffix }}

      - name: Upload shared
        uses: actions/upload-artifact@v3
        with:
          name: darwinia-artifact
          path: build

  build-runtimes:
    name: Build runtimes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime:
          - darwinia
          - crab
          - pangolin
          - pangoro
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v3

      - name: Cache target dir
        uses: actions/cache@v3
        with:
          path: "${{ github.workspace }}/runtime/${{ matrix.runtime }}/target"
          key: srtool-target-${{ matrix.runtime }}-${{ github.sha }}
          restore-keys: |
            srtool-target-${{ matrix.runtime }}-
            srtool-target-

      - name: Build ${{ matrix.runtime }} runtime
        id: srtool_build
        uses: chevdor/srtool-actions@v0.7.0
        env:
          # https://github.com/chevdor/srtool-actions/blob/89fe4b5285f6ca2212adcbb2726a2860e8d56d12/action.yml#LL123C54-L123C54
          AUTHORIZE_UPGRADE_PREFIX: "0x02"
          RUSTC_VERSION: ${{ env.RUST_TOOLCHAIN }}
        with:
          image: paritytech/srtool
          chain: ${{ matrix.runtime }}

      - name: Prepare artifact
        run: |
          mkdir -p build
          echo '${{ steps.srtool_build.outputs.json }}' | jq > build/${{ matrix.runtime }}_srtool_output.json
          mv ${{ steps.srtool_build.outputs.wasm_compressed }} build/
          echo '${{ steps.srtool_build.outputs.json }}'

      - name: Upload ${{ matrix.runtime }} wasm
        uses: actions/upload-artifact@v3
        with:
          name: darwinia-artifact
          path: build


  build-docker-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: [build-package]
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v3
      - name: Download shared
        uses: actions/download-artifact@v3
        with:
          name: artifact-binary
          path: build
      - name: Tag
        uses: olegtarasov/get-tag@v2.1
      - name: Sha
        uses: benjlevesque/short-sha@v1.2
      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.DOCKER_REGISTRY }}
      - name: Extract shared
        run: |
          mkdir -p dist
          tar -xvf build/darwinia-normal.tar.bz2 -C dist/
      - name: Publish docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: .maintain/docker/Dockerfile
          tags: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}:sha-${{ env.SHA }}
      - name: Publish docker image with tag
        uses: docker/build-push-action@v3
        if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/pango')
        with:
          push: true
          context: .
          file: .maintain/docker/Dockerfile
          tags: ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}:${{ env.GIT_TAG_NAME }}

  release-mainnets:
    name: Release mainnets
    runs-on: ubuntu-latest
    needs: [build-package, build-runtimes, build-docker-image]
    # if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Fetch latest code
        uses: actions/checkout@v3
      - name: Download shared
        uses: actions/download-artifact@v2
        with:
          name: darwinia-artifact
          path: build
