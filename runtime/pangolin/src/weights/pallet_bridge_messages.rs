// This file is part of Darwinia.
//
// Copyright (C) 2018-2023 Darwinia Network
// SPDX-License-Identifier: GPL-3.0
//
// Darwinia is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Darwinia is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Darwinia. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for `pallet_bridge_messages`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-25, STEPS: `2`, REPEAT: `1`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `cypress`, CPU: `AMD Ryzen 7 5700G with Radeon Graphics`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("pangolin-local"), DB CACHE: 1024

// Executed Command:
// ./target/release/darwinia
// benchmark
// pallet
// --header
// .maintain/license-header
// --execution
// wasm
// --heap-pages
// 4096
// --chain
// pangolin-local
// --output
// runtime/pangolin/src/weights/
// --extrinsic
// *
// --pallet
// pallet_bridge_messages

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_bridge_messages`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_bridge_messages::WeightInfo for WeightInfo<T> {
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages OutboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages OutboundLanes (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: PangoroFeeMarket AssignedRelayers (r:1 w:0)
	/// Proof Skipped: PangoroFeeMarket AssignedRelayers (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: BridgePangoroMessages OutboundMessages (r:0 w:9)
	/// Proof: BridgePangoroMessages OutboundMessages (max_values: None, max_size: Some(2621484), added: 2623959, mode: MaxEncodedLen)
	fn send_minimal_message_worst_case() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `334`
		//  Estimated: `12987`
		// Minimum execution time: 113_633_000 picoseconds.
		Weight::from_parts(113_633_000, 0)
			.saturating_add(Weight::from_parts(0, 12987))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(12))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages OutboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages OutboundLanes (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: PangoroFeeMarket AssignedRelayers (r:1 w:0)
	/// Proof Skipped: PangoroFeeMarket AssignedRelayers (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: BridgePangoroMessages OutboundMessages (r:0 w:9)
	/// Proof: BridgePangoroMessages OutboundMessages (max_values: None, max_size: Some(2621484), added: 2623959, mode: MaxEncodedLen)
	fn send_1_kb_message_worst_case() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `334`
		//  Estimated: `12987`
		// Minimum execution time: 118_522_000 picoseconds.
		Weight::from_parts(118_522_000, 0)
			.saturating_add(Weight::from_parts(0, 12987))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(12))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages OutboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages OutboundLanes (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: PangoroFeeMarket AssignedRelayers (r:1 w:0)
	/// Proof Skipped: PangoroFeeMarket AssignedRelayers (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: BridgePangoroMessages OutboundMessages (r:0 w:9)
	/// Proof: BridgePangoroMessages OutboundMessages (max_values: None, max_size: Some(2621484), added: 2623959, mode: MaxEncodedLen)
	fn send_16_kb_message_worst_case() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `334`
		//  Estimated: `12987`
		// Minimum execution time: 135_284_000 picoseconds.
		Weight::from_parts(135_284_000, 0)
			.saturating_add(Weight::from_parts(0, 12987))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(12))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgeMoonbaseGrandpa ImportedHeaders (r:1 w:0)
	/// Proof: BridgeMoonbaseGrandpa ImportedHeaders (max_values: None, max_size: Some(65568), added: 68043, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages InboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages InboundLanes (max_values: None, max_size: Some(5660), added: 8135, mode: MaxEncodedLen)
	fn receive_single_message_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `537`
		//  Estimated: `79645`
		// Minimum execution time: 81_226_000 picoseconds.
		Weight::from_parts(81_226_000, 0)
			.saturating_add(Weight::from_parts(0, 79645))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgeMoonbaseGrandpa ImportedHeaders (r:1 w:0)
	/// Proof: BridgeMoonbaseGrandpa ImportedHeaders (max_values: None, max_size: Some(65568), added: 68043, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages InboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages InboundLanes (max_values: None, max_size: Some(5660), added: 8135, mode: MaxEncodedLen)
	fn receive_two_messages_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `537`
		//  Estimated: `79645`
		// Minimum execution time: 102_598_000 picoseconds.
		Weight::from_parts(102_598_000, 0)
			.saturating_add(Weight::from_parts(0, 79645))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgeMoonbaseGrandpa ImportedHeaders (r:1 w:0)
	/// Proof: BridgeMoonbaseGrandpa ImportedHeaders (max_values: None, max_size: Some(65568), added: 68043, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages InboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages InboundLanes (max_values: None, max_size: Some(5660), added: 8135, mode: MaxEncodedLen)
	fn receive_single_message_proof_with_outbound_lane_state() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `537`
		//  Estimated: `79645`
		// Minimum execution time: 85_277_000 picoseconds.
		Weight::from_parts(85_277_000, 0)
			.saturating_add(Weight::from_parts(0, 79645))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgeMoonbaseGrandpa ImportedHeaders (r:1 w:0)
	/// Proof: BridgeMoonbaseGrandpa ImportedHeaders (max_values: None, max_size: Some(65568), added: 68043, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages InboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages InboundLanes (max_values: None, max_size: Some(5660), added: 8135, mode: MaxEncodedLen)
	fn receive_single_message_proof_1_kb() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `537`
		//  Estimated: `79645`
		// Minimum execution time: 87_093_000 picoseconds.
		Weight::from_parts(87_093_000, 0)
			.saturating_add(Weight::from_parts(0, 79645))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgeMoonbaseGrandpa ImportedHeaders (r:1 w:0)
	/// Proof: BridgeMoonbaseGrandpa ImportedHeaders (max_values: None, max_size: Some(65568), added: 68043, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages InboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages InboundLanes (max_values: None, max_size: Some(5660), added: 8135, mode: MaxEncodedLen)
	fn receive_single_message_proof_16_kb() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `537`
		//  Estimated: `79645`
		// Minimum execution time: 160_218_000 picoseconds.
		Weight::from_parts(160_218_000, 0)
			.saturating_add(Weight::from_parts(0, 79645))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgeMoonbaseGrandpa ImportedHeaders (r:1 w:0)
	/// Proof: BridgeMoonbaseGrandpa ImportedHeaders (max_values: None, max_size: Some(65568), added: 68043, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages InboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages InboundLanes (max_values: None, max_size: Some(5660), added: 8135, mode: MaxEncodedLen)
	fn receive_single_prepaid_message_proof() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `537`
		//  Estimated: `79645`
		// Minimum execution time: 78_293_000 picoseconds.
		Weight::from_parts(78_293_000, 0)
			.saturating_add(Weight::from_parts(0, 79645))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgeMoonbaseGrandpa ImportedHeaders (r:1 w:0)
	/// Proof: BridgeMoonbaseGrandpa ImportedHeaders (max_values: None, max_size: Some(65568), added: 68043, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages OutboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages OutboundLanes (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: PangoroFeeMarket Orders (r:1 w:0)
	/// Proof Skipped: PangoroFeeMarket Orders (max_values: None, max_size: None, mode: Measured)
	fn receive_delivery_proof_for_single_message() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `622`
		//  Estimated: `78116`
		// Minimum execution time: 61_950_000 picoseconds.
		Weight::from_parts(61_950_000, 0)
			.saturating_add(Weight::from_parts(0, 78116))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgeMoonbaseGrandpa ImportedHeaders (r:1 w:0)
	/// Proof: BridgeMoonbaseGrandpa ImportedHeaders (max_values: None, max_size: Some(65568), added: 68043, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages OutboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages OutboundLanes (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: PangoroFeeMarket Orders (r:2 w:0)
	/// Proof Skipped: PangoroFeeMarket Orders (max_values: None, max_size: None, mode: Measured)
	fn receive_delivery_proof_for_two_messages_by_single_relayer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `622`
		//  Estimated: `80591`
		// Minimum execution time: 85_627_000 picoseconds.
		Weight::from_parts(85_627_000, 0)
			.saturating_add(Weight::from_parts(0, 80591))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: BridgePangoroMessages PalletOperatingMode (r:1 w:0)
	/// Proof: BridgePangoroMessages PalletOperatingMode (max_values: Some(1), max_size: Some(2), added: 497, mode: MaxEncodedLen)
	/// Storage: BridgeMoonbaseGrandpa ImportedHeaders (r:1 w:0)
	/// Proof: BridgeMoonbaseGrandpa ImportedHeaders (max_values: None, max_size: Some(65568), added: 68043, mode: MaxEncodedLen)
	/// Storage: BridgePangoroMessages OutboundLanes (r:1 w:1)
	/// Proof: BridgePangoroMessages OutboundLanes (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: PangoroFeeMarket Orders (r:2 w:0)
	/// Proof Skipped: PangoroFeeMarket Orders (max_values: None, max_size: None, mode: Measured)
	fn receive_delivery_proof_for_two_messages_by_two_relayers() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `622`
		//  Estimated: `80591`
		// Minimum execution time: 82_623_000 picoseconds.
		Weight::from_parts(82_623_000, 0)
			.saturating_add(Weight::from_parts(0, 80591))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
