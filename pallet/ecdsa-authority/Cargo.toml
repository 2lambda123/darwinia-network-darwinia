[package]
authors.workspace = true
description       = "Relayer Authorities Protocal Implementation"
edition.workspace = true
name              = "darwinia-ecdsa-authority"
readme            = "README.md"
version.workspace = true

[dependencies]
# crates.io
codec      = { workspace = true, package = "parity-scale-codec" }
ethabi     = { version = "18.0", default-features = false }
scale-info = { workspace = true }
# crates.io optional
array-bytes  = { workspace = true, optional = true }
libsecp256k1 = { workspace = true, optional = true }

# darwinia
dc-primitives = { workspace = true }

# substrate
frame-support = { workspace = true }
frame-system  = { workspace = true }
sp-core       = { workspace = true }
sp-io         = { workspace = true }
sp-runtime    = { workspace = true }
sp-std        = { workspace = true }
# substrate optional
frame-benchmarking = { workspace = true, optional = true }

[dev-dependencies]
# crates.io
array-bytes  = { workspace = true }
libsecp256k1 = { workspace = true, features = ["std"] }
# substrate
sp-version = { workspace = true, features = ["std"] }

[features]
default = ["std"]
std = [
	# crates.io
	"codec/std",
	"ethabi/std",
	"scale-info/std",
	# crates.io optional
	"libsecp256k1?/std",

	# darwinia
	"dc-primitives/std",

	# substrate
	"frame-support/std",
	"frame-system/std",
	"sp-core/std",
	"sp-runtime/std",
	"sp-std/std",
	"sp-io/std",
	# substrate optional
	"frame-benchmarking?/std",
]

runtime-benchmarks = [
	# crates.io
	"array-bytes",
	"libsecp256k1",

	# substrate
	"frame-benchmarking/runtime-benchmarks",
]

try-runtime = [
	# substrate
	"frame-support/try-runtime",
]
