{
  "contracts":
  {
    "sol/staking.sol:Staking":
    {
      "abi":
      [
        {
          "inputs": [],
          "name": "chill",
          "outputs":
          [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs":
          [
            {
              "internalType": "uint32",
              "name": "commission",
              "type": "uint32"
            }
          ],
          "name": "collect",
          "outputs":
          [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs":
          [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "name": "nominate",
          "outputs":
          [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs":
          [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "name": "payout",
          "outputs":
          [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs":
          [
            {
              "internalType": "uint256",
              "name": "ringAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint16[]",
              "name": "depositIds",
              "type": "uint16[]"
            }
          ],
          "name": "stake",
          "outputs":
          [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs":
          [
            {
              "internalType": "uint256",
              "name": "ringAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint16[]",
              "name": "depositIds",
              "type": "uint16[]"
            }
          ],
          "name": "unstake",
          "outputs":
          [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "devdoc":
      {
        "kind": "dev",
        "methods":
        {
          "chill()":
          {
            "details": "Declare no desire to either collect or nominate.",
            "returns":
            {
              "_0": "returns true on success, false otherwise."
            }
          },
          "collect(uint32)":
          {
            "details": "Declare the desire to collect.",
            "params":
            {
              "commission": "collator commission, 0 ~ 100"
            },
            "returns":
            {
              "_0": "returns true on success, false otherwise."
            }
          },
          "nominate(address)":
          {
            "details": "Declare the desire to nominate a collator.",
            "params":
            {
              "target": "The target collator address"
            },
            "returns":
            {
              "_0": "returns true on success, false otherwise."
            }
          },
          "payout(address)":
          {
            "details": "Making the payout for the specified collators and its nominators.",
            "params":
            {
              "who": "The collator address"
            },
            "returns":
            {
              "_0": "returns true on success, false otherwise."
            }
          },
          "stake(uint256,uint16[])":
          {
            "details": "Add stakes to the staking pool.",
            "params":
            {
              "depositIds": "The deposit ids list",
              "ringAmount": "The amount of staking RING asset"
            },
            "returns":
            {
              "_0": "returns true on success, false otherwise."
            }
          },
          "unstake(uint256,uint16[])":
          {
            "details": "Withdraw stakes to the staking pool.",
            "params":
            {
              "depositIds": "The deposit ids list",
              "ringAmount": "The amount of staking RING asset"
            },
            "returns":
            {
              "_0": "returns true on success, false otherwise."
            }
          }
        },
        "title": "Staking",
        "version": 1
      },
      "hashes":
      {
        "chill()": "2b8a3ae6",
        "collect(uint32)": "10a66536",
        "nominate(address)": "b332180b",
        "payout(address)": "0b7e9c44",
        "stake(uint256,uint16[])": "88fd3d50",
        "unstake(uint256,uint16[])": "0e198447"
      }
    }
  },
  "version": "0.8.17+commit.8df45f5f.Linux.g++"
}
